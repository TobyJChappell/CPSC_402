-- Haskell data types for the abstract syntax.
-- Generated by the BNF converter.

module AbsGrammar where

newtype Ident = Ident String
  deriving (Eq, Ord, Show, Read)

data Dir = PDir Ident
  deriving (Eq, Ord, Show, Read)

data Program = Prog Func
  deriving (Eq, Ord, Show, Read)

data Func = Function Type Ident Seq
  deriving (Eq, Ord, Show, Read)

data Seq = Sequence [Stm]
  deriving (Eq, Ord, Show, Read)

data Type = TInt
  deriving (Eq, Ord, Show, Read)

data Stm = SReturn Integer | SPrint NS String NS
  deriving (Eq, Ord, Show, Read)

data NS = Namespace Ident Ident
  deriving (Eq, Ord, Show, Read)

